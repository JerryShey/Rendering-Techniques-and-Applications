// NCHU.cpp :
//

#include "stdafx.h"
#include "math.h"
#include <fstream>
#include "myArrays.cpp"

#define unitAngle 3.1415926/180.0
#define YUp 43.0/221.0
#define yDown 11.0/221.0
#define yUp 34.0/221.0

std::fstream fp;

void drowCircle(float x, float y, float r, int start, int angle, int color){
	float pointOut[360][2];
	int nowAngle = start, cnt = 0;
	GLfloat certenX = x / 755.0, certenY = 1.0 - y / 221.0;
	for (int i = 0; nowAngle < (start+angle); i++){
		pointOut[i][0] = (x + r*cosf(unitAngle*(nowAngle))) / 755.0;
		pointOut[i][1] = 1.0 - (y + r*sinf(unitAngle*(nowAngle))) / 221.0;
		nowAngle += 3;
		cnt++;
	}

	glBegin(GL_TRIANGLES);
	for (int i = cnt - 1; i > 0; i--){
		if (color){
			fp << 1.0 << "," << 1.0 << "," << 1.0 << "," << certenX << "," << certenY << "," << "0.0," << std::endl;
			fp << 1.0 << "," << 1.0 << "," << 1.0 << "," << pointOut[i][0] << "," << pointOut[i][1] << "," << "0.0," << std::endl;
			fp << 1.0 << "," << 1.0 << "," << 1.0 << "," << pointOut[i - 1][0] << "," << pointOut[i - 1][1] << "," << "0.0," << std::endl;
		}
		else{
			fp << 0 << "," << 102 / 255.0 << "," << 153 / 255.0 << "," <<  certenX << "," << certenY << "," << "0.0," << std::endl;
			fp << 0 << "," << 102 / 255.0 << "," << 153 / 255.0 << "," <<  pointOut[i][0] << "," << pointOut[i][1] << "," << "0.0," << std::endl;
			fp << 0 << "," << 102 / 255.0 << "," << 153 / 255.0 << "," <<  pointOut[i - 1][0] << "," << pointOut[i - 1][1] << "," << "0.0," << std::endl;
		}
	}
	glEnd();
}

void drowN(void){
	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
	GLfloat N[] = { 8.0 / 755.0, YUp, 0.0,
		8.0 / 755.0, yDown, 0.0,
		11.0 / 755, yDown, 0.0,
		8.0 / 755.0, YUp, 0.0,
		11.0 / 755, yDown, 0.0,
		11.0 / 755, YUp, 0.0,
		11.0 / 755, YUp, 0.0,
		11.0 / 755, 38.0 / 221, 0.0,
		29.0 / 755, yDown, 0.0,
		29.0 / 755, yDown, 0.0,
		11.0 / 755, YUp, 0.0,
		29.0 / 755, 16.0 / 221, 0.0,
		29.0 / 755, yDown, 0.0,
		29.0 / 755, YUp, 0.0,
		32.0 / 755, yDown, 0.0,
		29.0 / 755, YUp, 0.0,
		32.0 / 755, yDown, 0.0,
		32.0 / 755, YUp, 0.0
	};
	glVertexPointer(3, GL_FLOAT, 0, N);
	glDrawArrays(GL_TRIANGLES, 0, 18);
}

void drowLi(void){
	glInterleavedArrays(GL_C3F_V3F, 0, Li);
	glDrawArrays(GL_POLYGON, 0, 10);
	glDrawArrays(GL_POLYGON, 10, 15);
	//glDrawArrays(GL_POLYGON, 25, 4);
	glDrawArrays(GL_POLYGON, 25, 8);
	glDrawArrays(GL_POLYGON, 33, 4);
	glDrawArrays(GL_POLYGON, 37, 4);
	glDrawArrays(GL_POLYGON, 41, 7);

	//	25~32
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 142 / 755.0 << "," << 1.0 - 47 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 131 / 755.0 << "," << 1.0 - 56 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 122 / 755.0 << "," << 1.0 - 63 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 122 / 755.0 << "," << 1.0 - 71 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 123 / 755.0 << "," << 1.0 - 72 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 127 / 755.0 << "," << 1.0 - 72 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 138 / 755.0 << "," << 1.0 - 57 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 142 / 755.0 << "," << 1.0 - 47 / 221.0 << "0,0," << std::endl;
	//	33 36
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 138 / 755.0 << "," << 1.0 - 57 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 126 / 755.0 << "," << 1.0 - 72 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 156 / 755.0 << "," << 1.0 - 55 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 158 / 755.0 << "," << 1.0 - 51 / 221.0 << "0,0," << std::endl;
	//	37 41
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 156 / 755.0 << "," << 1.0 - 54 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 166 / 755.0 << "," << 1.0 - 53 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 166 / 755.0 << "," << 1.0 - 57 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 164 / 755.0 << "," << 1.0 - 51 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 156 / 755.0 << "," << 1.0 - 51 / 221.0 << "0,0," << std::endl;
	//	42 48
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 159 / 755.0 << "," << 1.0 - 54 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 153 / 755.0 << "," << 1.0 - 64 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 141 / 755.0 << "," << 1.0 - 77 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 134 / 755.0 << "," << 1.0 - 82 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 144 / 755.0 << "," << 1.0 - 81 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 164 / 755.0 << "," << 1.0 - 60 / 221.0 << "0,0," << std::endl;
	fp << 0 << "," << 0.4 << "," << 0.6 << "," << 166 / 755.0 << "," << 1.0 - 54 / 221.0 << "0,0," << std::endl;
}



//void drowU(int x){
//	fp << "\tstatic GLfloat U[] = {" << std::endl;
//	drowCircle(x + 14, 200, 10, 0, 105,0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 14, 200, 7, 0, 105,1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	drowCircle(x + 10, 200, 10, 75, 105,0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 10, 200, 7, 75, 105,1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x / 755.0 << "," << 17.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 3) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << (x + 3) / 755.0 << "," << 17.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x / 755.0 << "," << 17.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 3) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << (x + 21) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 21) / 755.0 << "," << 18.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 24) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << (x + 24) / 755.0 << "," << 18.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 21) / 755.0 << "," << 18.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 24) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//
//	fp << "};" << std::endl;
//}

void drowU(){
	glInterleavedArrays(GL_C3F_V3F, 0, U);
	glDrawArrays(GL_TRIANGLES, 0, 420);
}

//void drowi(int x){
//	float x1 = x / 755.0;
//	float x2 = (x + 3) / 755.0;
//	float y2 = 39.0 / 221.0;
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	fp << "\ti:" << std::endl;
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x1 << "," << YUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << y2 << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << y2 << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << x2 << "," << y2 << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << YUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << YUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << x2 << "," << yUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yDown << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << x1 << "," << yDown << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yUp << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yDown << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowi(){
	glInterleavedArrays(GL_C3F_V3F, 0, i);
	glDrawArrays(GL_TRIANGLES, 0, 48);
}

void drowl(void){
	glInterleavedArrays(GL_C3F_V3F, 0, l);
	glDrawArrays(GL_TRIANGLES, 0, 6);
}
//
//{
//	float x1 = 190. / 755.0, x2 = 193.0 / 755.0;
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	fp << "\tl:" << std::endl;
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x1 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << x2 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowe(void){
	glInterleavedArrays(GL_C3F_V3F, 0, e);
	glDrawArrays(GL_TRIANGLES, 0, 660);
}
//{
//	fp << "\te:" << std::endl;
//
//	drowCircle(641, 198, 12.5, 30, 330, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(641, 198, 9.5, 30, 330, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << 653.0 / 755.0 << "," << 22.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 653.0 / 755.0 << "," << 25.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 630.0 / 755.0 << "," << 25.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << 630.0 / 755.0 << "," << 25.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 653.0 / 755.0 << "," << 22.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 630.0 / 755.0 << "," << 22.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//
//
//}

void drowH(void){
	glInterleavedArrays(GL_C3F_V3F, 0, H);
	glDrawArrays(GL_TRIANGLES, 0, 18);
}
//{
//	float x1 = 380.0 / 755.0, x2 = 383.0 / 755.0, x3 = 401.0 / 755.0, x4 = 404.0 / 755.0;
//	float y2 = 30.0 / 221.0, y3 = 26.0 / 221.0;
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	fp << "\tH:" << std::endl;
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x1 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << x2 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x1 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << x2 << "," << y2 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << y3 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << y2 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << x3 << "," << y2 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << y3 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << y3 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*5*/
//	fp << x3 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*6*/
//	fp << x4 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowv(void){
	glInterleavedArrays(GL_C3F_V3F, 0, v);
	glDrawArrays(GL_TRIANGLES, 0, 15);
}
//{
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	float x1 = 603.0 / 755.0, x2 = 607.0 / 755.0, x3 = 611.0 / 755.0, x4 = 613.0 / 755.0,
//		x5 = 616.0 / 755.0, x6 = 620.0 / 755.0, x7 = 624.0 / 755.0;
//	float y = 15.0 / 221.0;
//	fp << "\tv:" << std::endl;
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x1 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << x2 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << x6 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*5*/
//	fp << x7 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x6 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowy(void){
	glInterleavedArrays(GL_C3F_V3F, 0, y);
	glDrawArrays(GL_TRIANGLES, 0, 30);
}
//
//
//{
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//	float x1 = 733.0 / 755.0, x2 = 737.0 / 755.0, x3 = 741.0 / 755.0, x4 = 743.0 / 755.0,
//		x5 = 746.0 / 755.0, x6 = 750.0 / 755.0, x7 = 754.0 / 755.0;
//	float y = 15.0 / 221.0;
//	fp << "\ty:" << std::endl;
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << x1 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x2 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << x2 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << x6 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x4 << "," << y << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*5*/
//	fp << x7 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x6 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*vµeªk¡ô*/
//	/*6*/
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 743.0 / 755.0 << "," << 4.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << x5 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*7*/
//	fp << x3 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 743.0 / 755.0 << "," << 5.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 739.0 / 755.0 << "," << 5.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*8*/
//	fp << 739.0 / 755.0 << "," << 5.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 742.0 / 755.0 << "," << 5.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 739.0 / 755.0 << "," << 1.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*9*/
//	fp << 743.0 / 755.0 << "," << 5.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 740.0 / 755.0 << "," << 1.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 734.0 / 755.0 << "," << 4.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*10*/
//	fp << 740.0 / 755.0 << "," << 1.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 734.0 / 755.0 << "," << 4.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << 735.0 / 755.0 << "," << 1.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowt(){
	glInterleavedArrays(GL_C3F_V3F, 0, t);
	glDrawArrays(GL_TRIANGLES, 0, 48);
}

void drowg(){
	glInterleavedArrays(GL_C3F_V3F, 0, g);
	glDrawArrays(GL_TRIANGLES, 0, 2184);
}
//{
//	fp << "\tg:" << std::endl;
//
//	drowCircle(x + 11, 198, 13, 0, 360, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 11, 198, 10, 0, 360, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	drowCircle(x + 13, 210, 10, 0, 105, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 13, 210, 7, 0, 105, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	drowCircle(x + 9, 210, 10, 78, 85, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 9, 210, 7, 78, 85, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << (x + 24) / 755.0 << "," << 36.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 21) / 755.0 << "," << 36.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 24) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << (x + 24) / 755.0 << "," << 36.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 24) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 21) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//
//}

void drowo(void){
	glInterleavedArrays(GL_C3F_V3F, 0, o);
	glDrawArrays(GL_TRIANGLES, 0, 714);
}

/*{
	fp << "\to:" << "," << std::endl;
	drowCircle(112, 199, 13, 0, 360, 0);
	glColor3f(1.0, 1.0, 1.0);
	drowCircle(112, 199, 10, 0, 360, 1);
	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
}*/

void drowr(){
	glInterleavedArrays(GL_C3F_V3F, 0, r);
	glDrawArrays(GL_TRIANGLES, 0, 264);
}
//	{
//	fp << "\tr:" << std::endl;
//	drowCircle(x + 10, 197, 11, 175, 130, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 10, 197, 8, 175, 130, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << (x - 1) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drown(){
	glInterleavedArrays(GL_C3F_V3F, 0, n);
	glDrawArrays(GL_TRIANGLES, 0, 1392);
}
//	{
//	fp << "\tn:" << std::endl;
//	drowCircle(x + 10, 197, 11, 175, 168, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 10, 197, 8, 175, 173, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << (x - 1) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << (x + 17) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 17) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 17) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 20) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowu(){
	glInterleavedArrays(GL_C3F_V3F, 0, u);
	glDrawArrays(GL_TRIANGLES, 0, 300);
}
//	{
//	fp << "\tu:" << std::endl;
//	drowCircle(x + 9, 200, 11, 13, 145, 0);
//	glColor3f(1.0, 1.0, 1.0);
//	drowCircle(x + 9, 200, 8, 13, 145, 1);
//	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//	glBegin(GL_TRIANGLES);
//	/*1*/
//	fp << (x - 1) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << 16.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*2*/
//	fp << (x + 2) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 2) / 755.0 << "," << 16.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x - 1) / 755.0 << "," << 16.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*3*/
//	fp << (x + 17) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 17) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	/*4*/
//	fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 17) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	fp << (x + 20) / 755.0 << "," << yUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//	glEnd();
//}

void drowC(void){
	glInterleavedArrays(GL_C3F_V3F, 0, C);
	glDrawArrays(GL_TRIANGLES, 0, 594);
}
/*{
	fp << "\tC:" << std::endl;
	drowCircle(228, 194, 16, 30, 300, 0);
	glColor3f(1.0, 1.0, 1.0);
	drowCircle(228, 194, 13, 30, 300, 1);
	glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);

}*/

void drowh(){
	glInterleavedArrays(GL_C3F_V3F, 0, h);
	glDrawArrays(GL_TRIANGLES, 0, 354);
}

//void drowh(int x){
//	{
//		fp << "\th:" << std::endl;
//		drowCircle(x + 10, 197, 11, 175, 170, 0);
//		glColor3f(1.0, 1.0, 1.0);
//		drowCircle(x + 10, 197, 8, 175, 175, 1);
//		glColor3f(0, 102.0 / 255.0, 153.0 / 255.0);
//
//		glBegin(GL_TRIANGLES);
//		/*1*/
//		fp << (x - 1) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 2) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		/*2*/
//		fp << (x + 2) / 755.0 << "," << YUp << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 2) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x - 1) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		/*3*/
//		fp << (x + 17) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 17) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		/*4*/
//		fp << (x + 20) / 755.0 << "," << yDown << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 17) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		fp << (x + 20) / 755.0 << "," << 27.0 / 221.0 << "," << "0.0," << 0 << "," << 102.0 / 255.0 << "," << 153.0 / 255.0 << "," << std::endl;
//		glEnd();
//	}
//}

void display(void)
{
	/* clear all pixels  */
	glClear(GL_COLOR_BUFFER_BIT);
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();

	/* draw white polygon (rectangle) with corners at
	* (0.25, 0.25, 0.0) and (0.75, 0.75, 0.0)
	*/
	drowN();
	drowi();
	drowH();
	drowv();
	drowl();
	drowC();
	drowy();
	drowe();
	drowt();
	drowo();
	drown();
	drowr();
	drowu();
	drowh();
	drowg();
	drowU();
	drowLi();

	glutSwapBuffers();
	/* don't wait!
	* start processing buffered OpenGL routines
	*/
	// glFlush ();
}

void init(void)
{
	/* select clearing color 	*/
	glClearColor(1.0, 1.0, 1.0, 0.0);

	/*Open file*/
	fp.open("All pixel.txt", std::ios::out);
	fp << "Start"  << std::endl;
	/* initialize viewing values  */
	glEnableClientState(GL_VERTEX_ARRAY);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0, 1.0, 0.0, 1.0, -1.0, 1.0);
}

/*
* Declare initial window size, position, and display mode
* (single buffer and RGBA).  Open window with "hello"
* in its title bar.  Call initialization routines.
* Register callback function to display graphics.
* Enter main loop and process events.
*/
int main(int argc, char** argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGB);
	glutInitWindowSize(755, 221);
	glutInitWindowPosition(100, 100);
	glutCreateWindow("NCHU logo");
	init();
	glewInit();
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;   /* ANSI C requires main to return int. */
}